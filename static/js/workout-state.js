/**
 * –ú–æ–¥—É–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
 */
class WorkoutState {
    static STORAGE_KEY = 'activeWorkout';

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É
     * @returns {Object|null} –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏–ª–∏ null
     */
    static getActive() {
        const savedState = localStorage.getItem(this.STORAGE_KEY);
        if (savedState) {
            try {
                return JSON.parse(savedState);
            } catch (e) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:', e);
                this.clear(); // –û—á–∏—â–∞–µ–º –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                return null;
            }
        }
        return null;
    }

    /**
     * –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
     * @param {Object} state - –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
     */
    static save(state) {
        try {
            localStorage.setItem(this.STORAGE_KEY, JSON.stringify(state));
        } catch (e) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:', e);
        }
    }

    /**
     * –û—á–∏—Å—Ç–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
     */
    static clear() {
        console.log('üî• WorkoutState.clear() –≤—ã–∑–≤–∞–Ω');
        console.log('üî• localStorage –¥–æ —É–¥–∞–ª–µ–Ω–∏—è:', localStorage.getItem(this.STORAGE_KEY));
        localStorage.removeItem(this.STORAGE_KEY);
        console.log('üî• localStorage –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è:', localStorage.getItem(this.STORAGE_KEY));
        // –ù–ï –≤—ã–∑—ã–≤–∞–µ–º updateIndicators –∑–¥–µ—Å—å —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–æ–≤
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Å–∞
     * @param {string} workoutSetCode - –ö–æ–¥ –∫–æ–º–ø–ª–µ–∫—Å–∞
     * @returns {boolean}
     */
    static isActive(workoutSetCode) {
        const activeWorkout = this.getActive();
        return activeWorkout && activeWorkout.workoutSetCode === workoutSetCode;
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
     * @param {string} workoutSetCode - –ö–æ–¥ –∫–æ–º–ø–ª–µ–∫—Å–∞
     * @param {string} workoutSetName - –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–ª–µ–∫—Å–∞
     * @returns {Object} –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
     */
    static create(workoutSetCode, workoutSetName) {
        const state = {
            workoutSetCode,
            workoutSetName,
            currentExerciseIndex: 0,
            currentRound: 0,
            isResting: false,
            isWarmingUp: false,
            startTime: Date.now(),
            completedRounds: {},
            restEndTime: null
        };
        this.save(state);
        return state;
    }

    /**
     * –û–±–Ω–æ–≤–∏—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –∞–∫—Ç–∏–≤–Ω–æ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
     */
    static updateIndicators() {
        console.log('üî• WorkoutState.updateIndicators() –≤—ã–∑–≤–∞–Ω');
        const activeWorkout = this.getActive();
        console.log('üî• –ê–∫—Ç–∏–≤–Ω–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞:', activeWorkout);

        // –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        this.updateGlobalIndicator(activeWorkout);

        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –∫–æ–º–ø–ª–µ–∫—Å–æ–≤
        const workoutCards = document.querySelectorAll('[data-workout-code]');
        console.log('üî• –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ä—Ç–æ—á–µ–∫ –∫–æ–º–ø–ª–µ–∫—Å–æ–≤:', workoutCards.length);

        workoutCards.forEach((card, index) => {
            const workoutCode = card.dataset.workoutCode;
            const indicator = card.querySelector('.active-workout-indicator');
            const startBtn = card.querySelector('.start-workout-btn');

            console.log(`üî• –ö–∞—Ä—Ç–æ—á–∫–∞ ${index} (–∫–æ–¥: ${workoutCode}):`, {
                hasIndicator: !!indicator,
                hasStartBtn: !!startBtn,
                isActive: activeWorkout && activeWorkout.workoutSetCode === workoutCode,
                indicatorCurrentDisplay: indicator ? indicator.style.display : '–Ω–µ—Ç —ç–ª–µ–º–µ–Ω—Ç–∞',
                btnCurrentClasses: startBtn ? startBtn.className : '–Ω–µ—Ç —ç–ª–µ–º–µ–Ω—Ç–∞'
            });

            if (indicator && startBtn) {
                if (activeWorkout && activeWorkout.workoutSetCode === workoutCode) {
                    console.log(`üî• –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ ${workoutCode}`);
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∞–∫—Ç–∏–≤–Ω–æ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
                    indicator.style.display = 'block';

                    // –ú–µ–Ω—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"
                    const btnText = startBtn.querySelector('.btn-text');
                    const btnIcon = startBtn.querySelector('i');

                    if (btnText) {
                        btnText.textContent = '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É';
                        console.log(`üî• –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É"`);
                    }
                    if (btnIcon) {
                        btnIcon.className = 'bi bi-play-fill';
                        console.log(`üî• –ò–∫–æ–Ω–∫–∞ –∫–Ω–æ–ø–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ bi-play-fill`);
                    }

                    startBtn.classList.remove('btn-success');
                    startBtn.classList.add('btn-warning');
                    console.log(`üî• –ö–ª–∞—Å—Å—ã –∫–Ω–æ–ø–∫–∏: —É–±—Ä–∞–ª–∏ btn-success, –¥–æ–±–∞–≤–∏–ª–∏ btn-warning`);
                } else {
                    console.log(`üî• –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ ${workoutCode}`);
                    // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
                    indicator.style.display = 'none';

                    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ã—á–Ω—É—é –∫–Ω–æ–ø–∫—É
                    const btnText = startBtn.querySelector('.btn-text');
                    const btnIcon = startBtn.querySelector('i');

                    if (btnText) {
                        btnText.textContent = '–ù–∞—á–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É';
                        console.log(`üî• –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω –Ω–∞ "–ù–∞—á–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É"`);
                    }
                    if (btnIcon) {
                        btnIcon.className = 'bi bi-play-circle';
                        console.log(`üî• –ò–∫–æ–Ω–∫–∞ –∫–Ω–æ–ø–∫–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞ –Ω–∞ bi-play-circle`);
                    }

                    startBtn.classList.remove('btn-warning');
                    startBtn.classList.add('btn-success');
                    console.log(`üî• –ö–ª–∞—Å—Å—ã –∫–Ω–æ–ø–∫–∏: —É–±—Ä–∞–ª–∏ btn-warning, –¥–æ–±–∞–≤–∏–ª–∏ btn-success`);
                }

                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                console.log(`üî• –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ ${workoutCode}:`, {
                    indicatorDisplay: indicator.style.display,
                    btnText: startBtn.querySelector('.btn-text')?.textContent,
                    btnClasses: startBtn.className
                });
            } else {
                console.warn(`üî• –ö–∞—Ä—Ç–æ—á–∫–∞ ${workoutCode}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —ç–ª–µ–º–µ–Ω—Ç—ã`, {
                    hasIndicator: !!indicator,
                    hasStartBtn: !!startBtn
                });
            }
        });

        console.log('üî• updateIndicators –∑–∞–≤–µ—Ä—à–µ–Ω');
    }

    /**
     * –û–±–Ω–æ–≤–∏—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
     */
    static updateGlobalIndicator(activeWorkout) {
        const indicator = document.getElementById('activeWorkoutIndicator');
        const nameSpan = document.getElementById('activeWorkoutName');
        const timeSpan = document.getElementById('activeWorkoutTime');

        if (indicator && nameSpan && timeSpan) {
            if (activeWorkout) {
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
                indicator.style.display = 'block';
                nameSpan.textContent = activeWorkout.workoutSetName || '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞';

                // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è
                const duration = this.getCurrentDuration();
                timeSpan.textContent = this.formatTime(duration);

                // –î–µ–ª–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–º –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ
                indicator.style.cursor = 'pointer';
                indicator.onclick = () => {
                    window.location.href = `/workout-sets/${activeWorkout.workoutSetCode}/start`;
                };
            } else {
                // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
                indicator.style.display = 'none';
                indicator.onclick = null;
            }
        }
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
     * @returns {number} –í—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
     */
    static getCurrentDuration() {
        const activeWorkout = this.getActive();
        if (activeWorkout && activeWorkout.startTime && !activeWorkout.isWarmingUp) {
            return Math.floor((Date.now() - activeWorkout.startTime) / 1000);
        }
        return 0;
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Ä–µ–º—è –≤ —Å—Ç—Ä–æ–∫—É –ú–ú:–°–°
     * @param {number} seconds - –í—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
     * @returns {string} –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
     */
    static formatTime(seconds) {
        const minutes = Math.floor(seconds / 60);
        const secs = seconds % 60;
        return `${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;
    }

    /**
     * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Å–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
     */
    static forceReset() {
        console.log('üî• WorkoutState.forceReset() - –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Å–±—Ä–æ—Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏');

        // –û—á–∏—â–∞–µ–º localStorage –ø–æ–ª–Ω–æ—Å—Ç—å—é
        try {
            localStorage.removeItem(this.STORAGE_KEY);
            console.log('üî• localStorage –æ—á–∏—â–µ–Ω');
        } catch (e) {
            console.error('üî• –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ localStorage:', e);
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã
        this.updateIndicators();

        console.log('üî• –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–±—Ä–æ—à–µ–Ω–æ, –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã');

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        alert('–°–æ—Å—Ç–æ—è–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–±—Ä–æ—à–µ–Ω–æ!');

        return true;
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
function getActiveWorkout() {
    return WorkoutState.getActive();
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–±—Ä–æ—Å–∞
function forceResetWorkout() {
    return WorkoutState.forceReset();
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    console.log('üî• WorkoutState –º–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω');
    WorkoutState.updateIndicators();

    // –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    // setInterval(() => {
    //     WorkoutState.updateIndicators();
    // }, 1000);
});

// –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ localStorage –∏–∑ –¥—Ä—É–≥–∏—Ö –≤–∫–ª–∞–¥–æ–∫
window.addEventListener('storage', function(e) {
    if (e.key === WorkoutState.STORAGE_KEY) {
        WorkoutState.updateIndicators();
    }
});